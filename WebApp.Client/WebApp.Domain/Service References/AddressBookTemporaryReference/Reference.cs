//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApp.Domain.AddressBookTemporaryReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfApp.Client.Models")]
    [System.SerializableAttribute()]
    public partial class ContactDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AddressBookTemporaryReference.IAddressBook")]
    public interface IAddressBook {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressBook/AddContact", ReplyAction="http://tempuri.org/IAddressBook/AddContactResponse")]
        bool AddContact(WebApp.Domain.AddressBookTemporaryReference.ContactDTO contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressBook/AddContact", ReplyAction="http://tempuri.org/IAddressBook/AddContactResponse")]
        System.Threading.Tasks.Task<bool> AddContactAsync(WebApp.Domain.AddressBookTemporaryReference.ContactDTO contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressBook/UpdateContact", ReplyAction="http://tempuri.org/IAddressBook/UpdateContactResponse")]
        bool UpdateContact(WebApp.Domain.AddressBookTemporaryReference.ContactDTO contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressBook/UpdateContact", ReplyAction="http://tempuri.org/IAddressBook/UpdateContactResponse")]
        System.Threading.Tasks.Task<bool> UpdateContactAsync(WebApp.Domain.AddressBookTemporaryReference.ContactDTO contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressBook/GetContact", ReplyAction="http://tempuri.org/IAddressBook/GetContactResponse")]
        WebApp.Domain.AddressBookTemporaryReference.ContactDTO GetContact(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressBook/GetContact", ReplyAction="http://tempuri.org/IAddressBook/GetContactResponse")]
        System.Threading.Tasks.Task<WebApp.Domain.AddressBookTemporaryReference.ContactDTO> GetContactAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressBook/DeleteContactById", ReplyAction="http://tempuri.org/IAddressBook/DeleteContactByIdResponse")]
        void DeleteContactById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressBook/DeleteContactById", ReplyAction="http://tempuri.org/IAddressBook/DeleteContactByIdResponse")]
        System.Threading.Tasks.Task DeleteContactByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressBook/DeleteContactByContact", ReplyAction="http://tempuri.org/IAddressBook/DeleteContactByContactResponse")]
        void DeleteContactByContact(WebApp.Domain.AddressBookTemporaryReference.ContactDTO contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressBook/DeleteContactByContact", ReplyAction="http://tempuri.org/IAddressBook/DeleteContactByContactResponse")]
        System.Threading.Tasks.Task DeleteContactByContactAsync(WebApp.Domain.AddressBookTemporaryReference.ContactDTO contact);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAddressBookChannel : WebApp.Domain.AddressBookTemporaryReference.IAddressBook, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddressBookClient : System.ServiceModel.ClientBase<WebApp.Domain.AddressBookTemporaryReference.IAddressBook>, WebApp.Domain.AddressBookTemporaryReference.IAddressBook {
        
        public AddressBookClient() {
        }
        
        public AddressBookClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AddressBookClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressBookClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressBookClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddContact(WebApp.Domain.AddressBookTemporaryReference.ContactDTO contact) {
            return base.Channel.AddContact(contact);
        }
        
        public System.Threading.Tasks.Task<bool> AddContactAsync(WebApp.Domain.AddressBookTemporaryReference.ContactDTO contact) {
            return base.Channel.AddContactAsync(contact);
        }
        
        public bool UpdateContact(WebApp.Domain.AddressBookTemporaryReference.ContactDTO contact) {
            return base.Channel.UpdateContact(contact);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateContactAsync(WebApp.Domain.AddressBookTemporaryReference.ContactDTO contact) {
            return base.Channel.UpdateContactAsync(contact);
        }
        
        public WebApp.Domain.AddressBookTemporaryReference.ContactDTO GetContact(int id) {
            return base.Channel.GetContact(id);
        }
        
        public System.Threading.Tasks.Task<WebApp.Domain.AddressBookTemporaryReference.ContactDTO> GetContactAsync(int id) {
            return base.Channel.GetContactAsync(id);
        }
        
        public void DeleteContactById(int id) {
            base.Channel.DeleteContactById(id);
        }
        
        public System.Threading.Tasks.Task DeleteContactByIdAsync(int id) {
            return base.Channel.DeleteContactByIdAsync(id);
        }
        
        public void DeleteContactByContact(WebApp.Domain.AddressBookTemporaryReference.ContactDTO contact) {
            base.Channel.DeleteContactByContact(contact);
        }
        
        public System.Threading.Tasks.Task DeleteContactByContactAsync(WebApp.Domain.AddressBookTemporaryReference.ContactDTO contact) {
            return base.Channel.DeleteContactByContactAsync(contact);
        }
    }
}
